plugins {
    id 'org.hidetake.swagger.generator' version '2.19.2'
    id 'groovy-base'
}

apply plugin: 'org.hidetake.swagger.generator'

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/release' }
}

dependencies {
    swaggerCodegen 'org.slf4j:slf4j-simple:1.7.36'
    swaggerCodegen 'io.swagger.codegen.v3:swagger-codegen-cli:3.0.46'
}

defaultTasks 'clean', 'generateSwaggerCode', 'postGeneration'

task swaggerClean(type: Delete) {
    doFirst {
        delete generatedApiDirectory
    }
}
swaggerClean.mustRunAfter(clean)

swaggerSources {
    mvp {
        inputFile = file("swagger_server/swagger/ta1.yaml")
        code {
            language = 'python-flask'
            components = ['models']
            outputDir = file (generatedApiDirectory)
            configFile = file (apiDirectory+'/config.json')
            wipeOutputDir = false
        }
    }
    server {
        inputFile = file("swagger_server/swagger/swagger.yaml")
        code {
            language = 'python-flask'
            components = ['models']
            outputDir = file (generatedApiDirectory)
            configFile = file (apiDirectory+'/config.json')
            wipeOutputDir = false
        }
    }
}
generateSwaggerCode.dependsOn(swaggerClean)
generateSwaggerCode.mustRunAfter(swaggerClean)


task postGeneration() {
    doLast() {
        // Copy generated files into models folder
        copy {
            from generatedApiDirectory+'/swagger_server/'
            into 'swagger_server/'
        }

        // delete generated api directory
        delete generatedApiDirectory

        // Copy basemodel file
        copy {
            from 'swagger_server/swagger/base_model_.py'
            into 'swagger_server/models/'
        }
        println 'copied base_model.py'

        // Generate models init file
        def initFile = "swagger_server/models/__init__.py"
        delete initFile
        exec {
            commandLine "bash", "-c", "echo -e \"from __future__ import absolute_import \n# import models into model package\" >> ${initFile}"
        }
        fileTree("swagger_server/models").matching{ include "**/*.py" exclude "__init__.py" }.visit{ FileVisitDetails details ->
            def basename = details.file.name.take(details.file.name.lastIndexOf('.'))
            exec {
                commandLine "bash", "-c", "cat ${details.file} | grep '^class' | sed 's/class //g' | sed 's/(.*//g' | xargs echo from swagger_server.models.${basename} import >> ${initFile}"
            }
        }
        println 'generated __init__.py for models'
    }
}
postGeneration.mustRunAfter('generateSwaggerCode')