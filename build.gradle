buildscript {
  repositories {
    gradlePluginPortal()
  }
  dependencies {
    classpath("org.openapi.generator:org.openapi.generator.gradle.plugin:7.11.0")
  }
}
apply plugin:'base'
apply plugin: 'org.openapi.generator'

defaultTasks 'clean', 'swaggerClean', 'generate', 'postGeneration'

def generatedApiDirectory = "generated"
def apiDirectory = "swagger"
def outputDirectory = "swagger_server"

task swaggerClean(type: Delete) {
    doFirst {
        delete generatedApiDirectory
    }
    mustRunAfter "clean"
}

// Define a task for validating the primary YAML
task validate(type: org.openapitools.generator.gradle.plugin.tasks.ValidateTask) {
    inputSpec.set("$projectDir/$apiDirectory/swagger.yaml")
}

// Define a task for validating the domain-specific YAML in isolation
task validateDomainSpec(type: org.openapitools.generator.gradle.plugin.tasks.ValidateTask) {
    inputSpec.set("$projectDir/$apiDirectory/domain_swagger.yaml")
}

// Define a task to clean then generate
task generate {
    dependsOn "openApiGenerate"
    mustRunAfter "swaggerClean"
}

openApiGenerate {
    generatorName = "python-flask"
    inputSpec = "$projectDir/$apiDirectory/swagger.yaml".toString()
    outputDir = "$projectDir/$generatedApiDirectory".toString()
    ignoreFileOverride = "$projectDir/.openapi-generator-ignore".toString()
    packageName = "$outputDirectory".toString()
    globalProperties = [
            modelDocs: "false"
    ]
    skipValidateSpec = true
    logToStderr = true
    generateAliasAsModel = false
    // set to true and set environment variable {LANG}_POST_PROCESS_FILE
    // (e.g. SCALA_POST_PROCESS_FILE) to the linter/formatter to be processed.
    // This command will be passed one file at a time for most supported post processors.
//    enablePostProcessFile = false
}

task postGeneration() {
    mustRunAfter "openApiGenerate"
    doLast() {
        // Copy generated files into models folder
        copy {
            from "${generatedApiDirectory}/${outputDirectory}/models"
            into "${outputDirectory}/models"
        }

        // delete generated api directory
        delete generatedApiDirectory
        println "removed ${generatedApiDirectory}"
    }
}

// Ensures tasks are re-run always, needed for openApiGenerate
gradle.taskGraph.whenReady { taskGraph ->
  taskGraph.getAllTasks().each {
      it.setOnlyIf { true }
      it.outputs.upToDateWhen { false }
  }
}