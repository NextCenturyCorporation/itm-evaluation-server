# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.demographics_rank import DemographicsRank  # noqa: F401,E501
from swagger_server.models.demographics_sex import DemographicsSex  # noqa: F401,E501
from swagger_server import util


class Demographics(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, age: int=None, sex: DemographicsSex=None, rank: DemographicsRank=None):  # noqa: E501
        """Demographics - a model defined in Swagger

        :param age: The age of this Demographics.  # noqa: E501
        :type age: int
        :param sex: The sex of this Demographics.  # noqa: E501
        :type sex: DemographicsSex
        :param rank: The rank of this Demographics.  # noqa: E501
        :type rank: DemographicsRank
        """
        self.swagger_types = {
            'age': int,
            'sex': DemographicsSex,
            'rank': DemographicsRank
        }

        self.attribute_map = {
            'age': 'age',
            'sex': 'sex',
            'rank': 'rank'
        }
        self._age = age
        self._sex = sex
        self._rank = rank

    @classmethod
    def from_dict(cls, dikt) -> 'Demographics':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Demographics of this Demographics.  # noqa: E501
        :rtype: Demographics
        """
        return util.deserialize_model(dikt, cls)

    @property
    def age(self) -> int:
        """Gets the age of this Demographics.

        the age of the character, omit if unknown  # noqa: E501

        :return: The age of this Demographics.
        :rtype: int
        """
        return self._age

    @age.setter
    def age(self, age: int):
        """Sets the age of this Demographics.

        the age of the character, omit if unknown  # noqa: E501

        :param age: The age of this Demographics.
        :type age: int
        """

        self._age = age

    @property
    def sex(self) -> DemographicsSex:
        """Gets the sex of this Demographics.


        :return: The sex of this Demographics.
        :rtype: DemographicsSex
        """
        return self._sex

    @sex.setter
    def sex(self, sex: DemographicsSex):
        """Sets the sex of this Demographics.


        :param sex: The sex of this Demographics.
        :type sex: DemographicsSex
        """

        self._sex = sex

    @property
    def rank(self) -> DemographicsRank:
        """Gets the rank of this Demographics.


        :return: The rank of this Demographics.
        :rtype: DemographicsRank
        """
        return self._rank

    @rank.setter
    def rank(self, rank: DemographicsRank):
        """Sets the rank of this Demographics.


        :param rank: The rank of this Demographics.
        :type rank: DemographicsRank
        """

        self._rank = rank
