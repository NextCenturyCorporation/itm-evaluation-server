# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ProbeConfig(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, probe_id: str=None, description: str=None):  # noqa: E501
        """ProbeConfig - a model defined in Swagger

        :param probe_id: The probe_id of this ProbeConfig.  # noqa: E501
        :type probe_id: str
        :param description: The description of this ProbeConfig.  # noqa: E501
        :type description: str
        """
        self.swagger_types = {
            'probe_id': str,
            'description': str
        }

        self.attribute_map = {
            'probe_id': 'probe_id',
            'description': 'description'
        }
        self._probe_id = probe_id
        self._description = description

    @classmethod
    def from_dict(cls, dikt) -> 'ProbeConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ProbeConfig of this ProbeConfig.  # noqa: E501
        :rtype: ProbeConfig
        """
        return util.deserialize_model(dikt, cls)

    @property
    def probe_id(self) -> str:
        """Gets the probe_id of this ProbeConfig.

        A valid probe_id from the appropriate TA1  # noqa: E501

        :return: The probe_id of this ProbeConfig.
        :rtype: str
        """
        return self._probe_id

    @probe_id.setter
    def probe_id(self, probe_id: str):
        """Sets the probe_id of this ProbeConfig.

        A valid probe_id from the appropriate TA1  # noqa: E501

        :param probe_id: The probe_id of this ProbeConfig.
        :type probe_id: str
        """

        self._probe_id = probe_id

    @property
    def description(self) -> str:
        """Gets the description of this ProbeConfig.

        A description of the probe for use by TA1  # noqa: E501

        :return: The description of this ProbeConfig.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this ProbeConfig.

        A description of the probe for use by TA1  # noqa: E501

        :param description: The description of this ProbeConfig.
        :type description: str
        """

        self._description = description
