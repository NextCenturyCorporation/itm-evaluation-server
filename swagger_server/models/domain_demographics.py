# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.military_branch_enum import MilitaryBranchEnum  # noqa: F401,E501
from swagger_server.models.military_disposition_enum import MilitaryDispositionEnum  # noqa: F401,E501
from swagger_server.models.military_rank_enum import MilitaryRankEnum  # noqa: F401,E501
from swagger_server.models.military_rank_title_enum import MilitaryRankTitleEnum  # noqa: F401,E501
from swagger_server.models.mission_importance_enum import MissionImportanceEnum  # noqa: F401,E501
from swagger_server.models.skills import Skills  # noqa: F401,E501
from swagger_server import util


class DomainDemographics(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, military_disposition: MilitaryDispositionEnum=None, military_branch: MilitaryBranchEnum=None, rank: MilitaryRankEnum=None, rank_title: MilitaryRankTitleEnum=None, skills: List[Skills]=None, mission_importance: MissionImportanceEnum=None):  # noqa: E501
        """DomainDemographics - a model defined in Swagger

        :param military_disposition: The military_disposition of this DomainDemographics.  # noqa: E501
        :type military_disposition: MilitaryDispositionEnum
        :param military_branch: The military_branch of this DomainDemographics.  # noqa: E501
        :type military_branch: MilitaryBranchEnum
        :param rank: The rank of this DomainDemographics.  # noqa: E501
        :type rank: MilitaryRankEnum
        :param rank_title: The rank_title of this DomainDemographics.  # noqa: E501
        :type rank_title: MilitaryRankTitleEnum
        :param skills: The skills of this DomainDemographics.  # noqa: E501
        :type skills: List[Skills]
        :param mission_importance: The mission_importance of this DomainDemographics.  # noqa: E501
        :type mission_importance: MissionImportanceEnum
        """
        self.swagger_types = {
            'military_disposition': MilitaryDispositionEnum,
            'military_branch': MilitaryBranchEnum,
            'rank': MilitaryRankEnum,
            'rank_title': MilitaryRankTitleEnum,
            'skills': List[Skills],
            'mission_importance': MissionImportanceEnum
        }

        self.attribute_map = {
            'military_disposition': 'military_disposition',
            'military_branch': 'military_branch',
            'rank': 'rank',
            'rank_title': 'rank_title',
            'skills': 'skills',
            'mission_importance': 'mission_importance'
        }
        self._military_disposition = military_disposition
        self._military_branch = military_branch
        self._rank = rank
        self._rank_title = rank_title
        self._skills = skills
        self._mission_importance = mission_importance

    @classmethod
    def from_dict(cls, dikt) -> 'DomainDemographics':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DomainDemographics of this DomainDemographics.  # noqa: E501
        :rtype: DomainDemographics
        """
        return util.deserialize_model(dikt, cls)

    @property
    def military_disposition(self) -> MilitaryDispositionEnum:
        """Gets the military_disposition of this DomainDemographics.


        :return: The military_disposition of this DomainDemographics.
        :rtype: MilitaryDispositionEnum
        """
        return self._military_disposition

    @military_disposition.setter
    def military_disposition(self, military_disposition: MilitaryDispositionEnum):
        """Sets the military_disposition of this DomainDemographics.


        :param military_disposition: The military_disposition of this DomainDemographics.
        :type military_disposition: MilitaryDispositionEnum
        """

        self._military_disposition = military_disposition

    @property
    def military_branch(self) -> MilitaryBranchEnum:
        """Gets the military_branch of this DomainDemographics.


        :return: The military_branch of this DomainDemographics.
        :rtype: MilitaryBranchEnum
        """
        return self._military_branch

    @military_branch.setter
    def military_branch(self, military_branch: MilitaryBranchEnum):
        """Sets the military_branch of this DomainDemographics.


        :param military_branch: The military_branch of this DomainDemographics.
        :type military_branch: MilitaryBranchEnum
        """

        self._military_branch = military_branch

    @property
    def rank(self) -> MilitaryRankEnum:
        """Gets the rank of this DomainDemographics.


        :return: The rank of this DomainDemographics.
        :rtype: MilitaryRankEnum
        """
        return self._rank

    @rank.setter
    def rank(self, rank: MilitaryRankEnum):
        """Sets the rank of this DomainDemographics.


        :param rank: The rank of this DomainDemographics.
        :type rank: MilitaryRankEnum
        """

        self._rank = rank

    @property
    def rank_title(self) -> MilitaryRankTitleEnum:
        """Gets the rank_title of this DomainDemographics.


        :return: The rank_title of this DomainDemographics.
        :rtype: MilitaryRankTitleEnum
        """
        return self._rank_title

    @rank_title.setter
    def rank_title(self, rank_title: MilitaryRankTitleEnum):
        """Sets the rank_title of this DomainDemographics.


        :param rank_title: The rank_title of this DomainDemographics.
        :type rank_title: MilitaryRankTitleEnum
        """

        self._rank_title = rank_title

    @property
    def skills(self) -> List[Skills]:
        """Gets the skills of this DomainDemographics.

        A list of pairs of skill type and descriptive skill level  # noqa: E501

        :return: The skills of this DomainDemographics.
        :rtype: List[Skills]
        """
        return self._skills

    @skills.setter
    def skills(self, skills: List[Skills]):
        """Sets the skills of this DomainDemographics.

        A list of pairs of skill type and descriptive skill level  # noqa: E501

        :param skills: The skills of this DomainDemographics.
        :type skills: List[Skills]
        """

        self._skills = skills

    @property
    def mission_importance(self) -> MissionImportanceEnum:
        """Gets the mission_importance of this DomainDemographics.


        :return: The mission_importance of this DomainDemographics.
        :rtype: MissionImportanceEnum
        """
        return self._mission_importance

    @mission_importance.setter
    def mission_importance(self, mission_importance: MissionImportanceEnum):
        """Sets the mission_importance of this DomainDemographics.


        :param mission_importance: The mission_importance of this DomainDemographics.
        :type mission_importance: MissionImportanceEnum
        """

        self._mission_importance = mission_importance
