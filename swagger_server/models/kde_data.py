# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class KDEData(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, kde: str=None, label: str=None):  # noqa: E501
        """KDEData - a model defined in Swagger

        :param kde: The kde of this KDEData.  # noqa: E501
        :type kde: str
        :param label: The label of this KDEData.  # noqa: E501
        :type label: str
        """
        self.swagger_types = {
            'kde': str,
            'label': str
        }

        self.attribute_map = {
            'kde': 'kde',
            'label': 'label'
        }
        self._kde = kde
        self._label = label

    @classmethod
    def from_dict(cls, dikt) -> 'KDEData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The KDE_Data of this KDEData.  # noqa: E501
        :rtype: KDEData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kde(self) -> str:
        """Gets the kde of this KDEData.

        sklearn.neighbors.KernelDensity serialized to base64 string  # noqa: E501

        :return: The kde of this KDEData.
        :rtype: str
        """
        return self._kde

    @kde.setter
    def kde(self, kde: str):
        """Sets the kde of this KDEData.

        sklearn.neighbors.KernelDensity serialized to base64 string  # noqa: E501

        :param kde: The kde of this KDEData.
        :type kde: str
        """
        if kde is None:
            raise ValueError("Invalid value for `kde`, must not be `None`")  # noqa: E501

        self._kde = kde

    @property
    def label(self) -> str:
        """Gets the label of this KDEData.

        Label for this KDE  # noqa: E501

        :return: The label of this KDEData.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label: str):
        """Sets the label of this KDEData.

        Label for this KDE  # noqa: E501

        :param label: The label of this KDEData.
        :type label: str
        """
        if label is None:
            raise ValueError("Invalid value for `label`, must not be `None`")  # noqa: E501

        self._label = label
